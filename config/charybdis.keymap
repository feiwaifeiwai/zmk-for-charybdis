#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    macros {
        Mo1_macro: Mo1_macro {
            compatible = "zmk,behavior-macro";
            label = "Mo1_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_EFF &rgb_ug RGB_COLOR_HSB(128,100,50)>,
                <&macro_wait_time 30>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&rgb_ug RGB_EFR>;
        };

        Mo2_macro: Mo2_macro {
            compatible = "zmk,behavior-macro";
            label = "Mo2_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_EFF &rgb_ug RGB_COLOR_HSB(200,100,50)>,
                <&macro_wait_time 30>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&rgb_ug RGB_EFR>;
        };

        Mo3_macro: Mo3_macro {
            compatible = "zmk,behavior-macro";
            label = "Mo3_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3>,
                <&macro_tap>,
                <&rgb_ug RGB_EFF &rgb_ug RGB_COLOR_HSB(300,100,50)>,
                <&macro_wait_time 30>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&rgb_ug RGB_EFR>;
        };

        To1_macro: To1_macro {
            compatible = "zmk,behavior-macro";
            label = "To1_macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF &rgb_ug RGB_COLOR_HSB(128,100,50) &to 1>;
        };

        To0_macro: To0_macro {
            compatible = "zmk,behavior-macro";
            label = "To0_macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFR &to 0>;
        };

        To2_macro: To2_macro {
            compatible = "zmk,behavior-macro";
            label = "To2_macro";
            #binding-cells = <0>;
            bindings =
                <&to 2>,
                <&macro_wait_time 30>,
                <&rgb_ug RGB_COLOR_HSB(250,100,50)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3     &kp N4        &kp N5        &kp N6     &kp N7     &kp N8     &kp N9      &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W   &kp E      &kp R         &kp T         &kp Y      &kp U      &kp I      &kp O       &kp P     &kp BSLH
&kp LEFT_CONTROL  &kp A   &kp S   &kp D      &kp F         &kp G         &kp H      &kp J      &kp K      &kp L       &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z   &kp X   &kp C      &kp V         &kp B         &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp FSLH  &Mo2_macro
                                  &kp SPACE  &kp LEFT_ALT  &Mo1_macro    &kp LWIN   &kp SPACE
                                             &mkp MB1      &mkp MB2      &kp ENTER
            >;
        };

        layer_1 {
            bindings = <
&kp F1    &kp F2           &kp F3           &kp F4           &kp F5           &kp F6        &kp F7          &kp F8    &kp F9    &kp F10    &kp F11  &kp F12
&kp CAPS  &trans           &trans           &trans           &trans           &bt BT_NXT    &msc SCRL_UP    &trans    &kp UP    &trans     &trans   &kp DEL
&trans    &trans           &trans           &trans           &trans           &bt BT_CLR    &msc SCRL_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &trans        &trans          &trans    &trans    &trans     &trans   &trans
                                            &trans           &trans           &trans        &kp LA(GRAVE)   &trans
                                                             &trans           &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&kp GRAVE  &trans            &trans             &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp MINUS         &kp EQUAL          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans            &trans             &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans  &trans  &trans    &trans  &trans
                                                        &trans  &trans    &trans
            >;
        };

        /* layer_2 {
            bindings = <
&none  &none   &none    &none   &none         &none         &kp N1         &none         &none     &none  &none   &to 0
&none  &none   &none    &none   &none         &none         &none         &none          &rgb_ug RGB_BRD &rgb_ug RGB_BRI  &rgb_ug RGB_EFF   &rgb_ug RGB_TOG
&none  &none   &none    &none   &none         &none         &none         &mkp LCLK     &mkp RCLK  &none  &none   &none
&none  &none   &none    &none   &bt BT_NXT  &bt BT_CLR    &none         &none         &none     &none  &none   &none
                                   &none         &none         &none         &none         &none
                                                 &none         &none         &none
            >;
       
            
        };

       Mouse {
            bindings = <
&none        &none         &none         &none         &none      &none         &none       &none      &none         &none         &none         &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &none      &bt BT_CLR    &bt BT_CLR  &none      &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
&none        &trans        &trans        &mkp MCLK     &trans     &none         &none       &trans     &mkp MCLK     &trans        &trans        &none
&bootloader  &trans        &mkp RCLK     &mo 4         &mkp LCLK  &mo 5         &mo 5       &mkp LCLK  &mo 4         &mkp RCLK     &trans        &bootloader
                                         &mo 5         &mkp LCLK  &mkp RCLK     &mkp RCLK   &mkp LCLK
                                                       &none      &trans        &trans
            >;

            
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &mkp MCLK  &trans     &trans       &trans     &trans     &mkp MCLK  &trans     &trans  &trans
&trans  &trans  &mkp RCLK  &trans     &mkp LCLK  &trans       &trans     &mkp LCLK  &trans     &mkp RCLK  &trans  &trans
                           &trans     &mkp LCLK  &mkp RCLK    &mkp RCLK  &mkp LCLK
                                      &trans     &trans       &trans
            >;
                
                
               
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans       &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &mkp MCLK  &trans     &trans       &trans     &trans     &mkp MCLK  &trans     &trans  &trans
&trans  &trans  &mkp RCLK  &trans     &mkp LCLK  &trans       &trans     &mkp LCLK  &trans     &mkp RCLK  &trans  &trans
                           &trans     &mkp LCLK  &mkp RCLK    &mkp RCLK  &mkp LCLK
                                      &trans     &trans       &trans
            >;
                
                
        };*/
    };
};
